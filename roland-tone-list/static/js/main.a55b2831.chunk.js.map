{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","jsonFile","filter","setFilter","search","setSearch","JSON","parse","localStorage","getItem","localStars","setLocalStars","useEffect","jsonFilter","item","name","toLowerCase","includes","console","log","className","map","id","number","category","value","onChange","e","target","el","type","onClick","stars","setItem","parser","push","stringify","addedNewStar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OA+GeA,MA3Gf,WAAgB,IAAD,EACeC,mBAASC,GADxB,mBACNC,EADM,KACEC,EADF,OAEeH,mBAAS,IAFxB,mBAENI,EAFM,KAEEC,EAFF,OAGuBL,mBAClCM,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAJlC,mBAGNC,EAHM,KAGMC,EAHN,KAsCb,OA/BAC,qBAAU,WACR,GAAKR,EAAL,CAKA,IAAMS,EAAaZ,EAASC,QAAO,SAACY,GAAD,OACjCA,EAAKC,KAAKC,cAAcC,SAASb,MAEnCD,EAAUU,QAPRV,EAAUF,KAQX,CAACG,IAmBJc,QAAQC,IAAIT,GAGV,sBAAKU,UAAU,sBAAf,UACE,gCACE,uCACA,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,mCACA,2CACA,wCACA,gDAGJ,gCACGV,EAAWW,KAAI,SAACC,GAAD,OACd,+BACE,6BAAKrB,EAASqB,GAAIA,KAClB,6BAAKrB,EAASqB,GAAIC,SAClB,6BAAKtB,EAASqB,GAAIP,OAClB,6BAAKd,EAASqB,GAAIE,yBAM5B,uCACA,uBACEJ,UAAU,eACVK,MAAOrB,EACPsB,SAAU,SAACC,GAAD,OAAOtB,EAAUsB,EAAEC,OAAOH,UAEtC,uBACA,gCACE,2CACA,wBAAOL,UAAU,QAAjB,UACE,gCACE,+BACE,2CACA,wCACA,2CACA,4BAGJ,gCACGlB,EAAOmB,KAAI,SAACQ,GAAD,OACV,+BACE,6BAAKA,EAAGN,SACR,6BAAKM,EAAGd,OACR,6BAAKc,EAAGL,WACR,8BACId,EAAWO,SAASY,EAAGP,KACvB,wBACEQ,KAAK,SACLV,UAAU,kBACVW,QAAS,kBAzE7B,SAAsBT,GACpB,IAAMU,EAAQxB,aAAaC,QAAQ,SAEnC,IAAKuB,EAGH,OAFArB,EAAc,GAAD,mBAAKD,GAAL,CAAiBY,KAEvBd,aAAayB,QAAQ,QAArB,WAAkCX,EAAlC,MAGT,IAAMY,EAAS5B,KAAKC,MAAMyB,GAErBE,EAAOjB,SAASK,KACnBY,EAAOC,KAAKb,GACZd,aAAayB,QAAQ,QAAS3B,KAAK8B,UAAUF,IAC7CvB,EAAc,GAAD,mBAAKD,GAAL,CAAiBY,MA2DCe,CAAaR,EAAGP,KAHjC,sCCjFLgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a55b2831.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\nimport jsonFile from \"./myjsonfile.json\";\n\nfunction App() {\n  const [filter, setFilter] = useState(jsonFile);\n  const [search, setSearch] = useState(\"\");\n  const [localStars, setLocalStars] = useState(\n    JSON.parse(localStorage.getItem(\"stars\")) || []\n  );\n\n  useEffect(() => {\n    if (!search) {\n      setFilter(jsonFile);\n      return;\n    }\n\n    const jsonFilter = jsonFile.filter((item) =>\n      item.name.toLowerCase().includes(search)\n    );\n    setFilter(jsonFilter);\n  }, [search]);\n\n  function addedNewStar(id) {\n    const stars = localStorage.getItem(\"stars\");\n\n    if (!stars) {\n      setLocalStars([...localStars, id]);\n\n      return localStorage.setItem(\"stars\", `[${id}]`);\n    }\n\n    const parser = JSON.parse(stars);\n\n    if (!parser.includes(id)) {\n      parser.push(id);\n      localStorage.setItem(\"stars\", JSON.stringify(parser));\n      setLocalStars([...localStars, id]);\n    }\n  }\n  console.log(localStars);\n\n  return (\n    <div className=\"App container-fluid\">\n      <div>\n        <h3>Stars</h3>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Número</th>\n              <th>Timbre</th>\n              <th>Categoria</th>\n            </tr>\n          </thead>\n          <tbody>\n            {localStars.map((id) => (\n              <tr>\n                <td>{jsonFile[id].id}</td>\n                <td>{jsonFile[id].number}</td>\n                <td>{jsonFile[id].name}</td>\n                <td>{jsonFile[id].category}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <p>Buscar</p>\n      <input\n        className=\"form-control\"\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n      />\n      <br />\n      <div>\n        <h3>Tone list</h3>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Número</th>\n              <th>Timbre</th>\n              <th>Categoria</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {filter.map((el) => (\n              <tr>\n                <td>{el.number}</td>\n                <td>{el.name}</td>\n                <td>{el.category}</td>\n                <td>\n                  {!localStars.includes(el.id) && (\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-default\"\n                      onClick={() => addedNewStar(el.id)}\n                    >\n                      star\n                    </button>\n                  )}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}